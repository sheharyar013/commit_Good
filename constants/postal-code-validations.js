const postalCodeValidations = {
  AD: /^AD\b\d{3}/,
  AM: /^(37)?\b\d{4}/,
  AR: /^([A-HJ-NP-Z])?\b\d{4}([A-Z]{3})?/,
  AS: /^96799/,
  AT: /^\b\d{4}/,
  AU: /^\b\d{4}/,
  AX: /^22\b\d{3}/,
  AZ: /^\b\d{4}/,
  BA: /^\b\d{5}/,
  BB: /^(BB\b\d{5})?/,
  BD: /^\b\d{4}/,
  BE: /^\b\d{4}/,
  BG: /^\b\d{4}/,
  BH: /^((1[0-2]|[2-9])\b\d{2})?/,
  BM: /^[A-Z]{2} ?[A-Z\d]{2}/,
  BN: /^[A-Z]{2} ?\b\d{4}/,
  BR: /^\b\d{5}[\b-]?\b\d{3}/,
  BY: /^\b\d{6}/,
  CA: /^[ABCEGHJKLMNPRSTVXY]\b\d[ABCEGHJ-NPRSTV-Z] ?\b\d[ABCEGHJ-NPRSTV-Z]\b\d/,
  CC: /^6799/,
  CH: /^\b\d{4}/,
  CK: /^\b\d{4}/,
  CL: /^\b\d{7}/,
  CN: /^\b\d{6}/,
  CR: /^\b\d{4,5}|\b\d{3}-\b\d{4}/,
  CS: /^\b\d{5}/,
  CV: /^\b\d{4}/,
  CX: /^6798/,
  CY: /^\b\d{4}/,
  CZ: /^\b\d{3} ?\b\d{2}/,
  DE: /^\b\d{5}/,
  DK: /^\b\d{4}/,
  DO: /^\b\d{5}/,
  DZ: /^\b\d{5}/,
  EC: /^([A-Z]\b\d{4}[A-Z]|(?:[A-Z]{2})?\b\d{6})?/,
  EE: /^\b\d{5}/,
  EG: /^\b\d{5}/,
  ES: /^\b\d{5}/,
  ET: /^\b\d{4}/,
  FI: /^\b\d{5}/,
  FK: /^FIQQ 1ZZ/,
  FM: /^(9694[1-4])([ \b-]\b\d{4})?/,
  FO: /^\b\d{3}/,
  FR: /^\b\d{2} ?\b\d{3}/,
  GB: /^GIR ?0AA|((AB|AL|B|BA|BB|BD|BH|BL|BN|BR|BS|BT|CA|CB|CF|CH|CM|CO|CR|CT|CV|CW|DA|DD|DE|DG|DH|DL|DN|DT|DY|E|EC|EH|EN|EX|FK|FY|G|GL|GY|GU|HA|HD|HG|HP|HR|HS|HU|HX|IG|IM|IP|IV|JE|KA|KT|KW|KY|L|LA|LD|LE|LL|LN|LS|LU|M|ME|MK|ML|N|NE|NG|NN|NP|NR|NW|OL|OX|PA|PE|PH|PL|PO|PR|RG|RH|RM|S|SA|SE|SG|SK|SL|SM|SN|SO|SP|SR|SS|ST|SW|SY|TA|TD|TF|TN|TQ|TR|TS|TW|UB|W|WA|WC|WD|WF|WN|WR|WS|WV|YO|ZE)(\b\d[\b\dA-Z]? ?\b\d[ABD-HJLN-UW-Z]{2}))|BFPO ?\b\d{1,4}/,
  GE: /^\b\d{4}/,
  GF: /^9[78]3\b\d{2}/,
  GG: /^GY\b\d[\b\dA-Z]? ?\b\d[ABD-HJLN-UW-Z]{2}/,
  GL: /^39\b\d{2}/,
  GN: /^\b\d{3}/,
  GP: /^9[78][01]\b\d{2}/,
  GR: /^\b\d{3} ?\b\d{2}/,
  GS: /^SIQQ 1ZZ/,
  GT: /^\b\d{5}/,
  GU: /^969[123]\b\d([ \b-]\b\d{4})?/,
  GW: /^\b\d{4}/,
  HM: /^\b\d{4}/,
  HN: /^(?:\b\d{5})?/,
  HR: /^\b\d{5}/,
  HT: /^\b\d{4}/,
  HU: /^\b\d{4}/,
  ID: /^\b\d{5}/,
  IL: /^\b\d{5}/,
  IM: /^IM\b\d[\b\dA-Z]? ?\b\d[ABD-HJLN-UW-Z]{2}/,
  IN: /^\b\d{6}/,
  IO: /^BBND 1ZZ/,
  IQ: /^\b\d{5}/,
  IS: /^\b\d{3}/,
  IT: /^\b\d{5}/,
  JE: /^JE\b\d[\b\dA-Z]? ?\b\d[ABD-HJLN-UW-Z]{2}/,
  JO: /^\b\d{5}/,
  JP: /^\b\d{3}-\b\d{4}/,
  KE: /^\b\d{5}/,
  KG: /^\b\d{6}/,
  KH: /^\b\d{5}/,
  KR: /^\b\d{3}[\b-]\b\d{3}/,
  KW: /^\b\d{5}/,
  KZ: /^\b\d{6}/,
  LA: /^\b\d{5}/,
  LB: /^\b\d{4}( ?\b\d{4})?/,
  LI: /^(948[5-9])|(949[0-7])/,
  LK: /^\b\d{5}/,
  LR: /^\b\d{4}/,
  LS: /^\b\d{3}/,
  LT: /^\b\d{5}/,
  LU: /^\b\d{4}/,
  LV: /^\b\d{4}/,
  MA: /^\b\d{5}/,
  MC: /^980\b\d{2}/,
  MD: /^\b\d{4}/,
  ME: /^8\b\d{4}/,
  MG: /^\b\d{3}/,
  MH: /^969[67]\b\d([ \b-]\b\d{4})?/,
  MK: /^\b\d{4}/,
  MN: /^\b\d{6}/,
  MP: /^9695[012]([ \b-]\b\d{4})?/,
  MQ: /^9[78]2\b\d{2}/,
  MT: /^[A-Z]{3} ?\b\d{2,4}/,
  MU: /^(\b\d{3}[A-Z]{2}\b\d{3})?/,
  MV: /^\b\d{5}/,
  MX: /^\b\d{5}/,
  MY: /^\b\d{5}/,
  NC: /^988\b\d{2}/,
  NE: /^\b\d{4}/,
  NF: /^2899/,
  NG: /^(\b\d{6})?/,
  NI: /^((\b\d{4}-)?\b\d{3}-\b\d{3}(-\b\d{1})?)?/,
  NL: /^\b\d{4} ?[A-Z]{2}/,
  NO: /^\b\d{4}/,
  NP: /^\b\d{5}/,
  NZ: /^\b\d{4}/,
  OM: /^(PC )?\b\d{3}/,
  PF: /^987\b\d{2}/,
  PG: /^\b\d{3}/,
  PH: /^\b\d{4}/,
  PK: /^\b\d{5}/,
  PL: /^\b\d{2}-\b\d{3}/,
  PM: /^9[78]5\b\d{2}/,
  PN: /^PCRN 1ZZ/,
  PR: /^00[679]\b\d{2}([ \b-]\b\d{4})?/,
  PT: /^\b\d{4}([\b-]\b\d{3})?/,
  PW: /^96940/,
  PY: /^\b\d{4}/,
  RE: /^9[78]4\b\d{2}/,
  RO: /^\b\d{6}/,
  RS: /^\b\d{6}/,
  RU: /^\b\d{6}/,
  SA: /^\b\d{5}/,
  SE: /^\b\d{3} ?\b\d{2}/,
  SG: /^\b\d{6}/,
  SH: /^(ASCN|STHL) 1ZZ/,
  SI: /^\b\d{4}/,
  SJ: /^\b\d{4}/,
  SK: /^\b\d{3} ?\b\d{2}/,
  SM: /^4789\b\d/,
  SN: /^\b\d{5}/,
  SO: /^\b\d{5}/,
  SZ: /^[HLMS]\b\d{3}/,
  TC: /^TKCA 1ZZ/,
  TH: /^\b\d{5}/,
  TJ: /^\b\d{6}/,
  TM: /^\b\d{6}/,
  TN: /^\b\d{4}/,
  TR: /^\b\d{5}/,
  TW: /^\b\d{3}(\b\d{2})?/,
  UA: /^\b\d{5}/,
  US: /^\b\d{5}([ \b-]\b\d{4})?/,
  UY: /^\b\d{5}/,
  UZ: /^\b\d{6}/,
  VA: /^00120/,
  VE: /^\b\d{4}/,
  VI: /^008(([0-4]\b\d)|(5[01]))([ \b-]\b\d{4})?/,
  WF: /^986\b\d{2}/,
  XK: /^\b\d{5}/,
  YT: /^976\b\d{2}/,
  YU: /^\b\d{5}/,
  ZA: /^\b\d{4}/,
  ZM: /^\b\d{5}/,
};

/**
 *
 * @param {string} country_code
 * @param {string} zip_code
 * @returns {boolean|undefined}
 */
const validateZipCode = (country_code, zip_code) => {
  if (!country_code || !zip_code) {
    return false;
  }
  return postalCodeValidations[country_code]?.test(zip_code);
};

export { postalCodeValidations, validateZipCode };
